All JavaScript objects inherit properties and methods from a prototype.
 prototype is a normal property whose value is an object.
Example
function Person(first, last, age, eyecolor) {
    this.firstName = first;
    this.lastName = last;
    this.age = age;
    this.eyeColor = eyecolor;
}
var myFather = new Person("John", "Doe", 50, "blue");
var myMother = new Person("Sally", "Rally", 48, "green");

NOTE => you can not add a new property to an existing object constructor:
Person.nationality = "English";

To add a new property to a constructor, you must add it to the constructor function:
function Person(first, last, age, eyecolor) {
    this.firstName = first;
    this.lastName = last;
    this.age = age;
    this.eyeColor = eyecolor;
    this.nationality = "English";
}


=>
All JavaScript objects inherit properties and methods from a prototype.
Date objects inherit from Date.prototype. Array objects inherit from Array.prototype. Person objects inherit from Person.prototype.

Adding Properties and Methods to Objects
Sometimes you want to add new properties (or methods) to all existing objects of a given type.

Example
function Person(first, last, age, eyecolor) {
    this.firstName = first;
    this.lastName = last;
    this.age = age;
    this.eyeColor = eyecolor;
}
Person.prototype.nationality = "English";
var myFather = new Person("John", "Doe", 50, "blue");
copnsole.log(myFather.nationality); // O/P english

The JavaScript prototype property also allows you to add new methods objects constructors:

Example
function Person(first, last, age, eyecolor) {
    this.firstName = first;
    this.lastName = last;
    this.age = age;
    this.eyeColor = eyecolor;
}
Person.prototype.name = function() {
    return this.firstName + " " + this.lastName;
};
var myFather = new Person("John", "Doe", 50, "blue");
console.log(myFather.name()); // O/p John Doe

Count Vowel
var chkString = 'this is Angular';
var count = 0;
for(var i=0;i<chkString.length;i++){
	if('aeiouAEIOU'.indexOf(chkString[i]) !== -1){
    	count++;
	}
}
console.log(count);