Promise:
A Promise handles a single event when an async operation completes or fails.


Observable:
=> An Observable is like a Stream (in many languages) and allows to pass zero or more events where the callback is called for each event.
=> With Observable it doesn't matter if you want to handle 0, 1, or multiple events. You can utilize the same API in each case
=> Observable also has the advantage over Promise to be cancelable. 
=>Observable provides operators like map, forEach, reduce, ... similar to an array
There are also powerful operators like retry(), or replay(), ... that are often quite handy.

Promises:
return a single value
not cancellable
more readable code with try/catch and async/await
Not Lezy

Observables:
work with multiple values over time
cancellable
support map, filter, reduce and similar operators
use Reactive Extensions (RxJS)
an array whose items arrive asynchronously over time
LAZY: An obserable is not called untill we subscribe to the observable